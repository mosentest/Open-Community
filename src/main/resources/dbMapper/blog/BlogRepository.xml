<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mu.community.blog.repository.BlogRepository" >

    <sql id="blog">
      SELECT
        blog.id,
        blog.`top`,
        blog.`type`,
        blog.create_date,
        blog.update_date,
        blog.title,
        blog.summary,
        blog.content,
        blog.n_like,
        blog.n_view,
        blog.n_reply,
        blog_category.id AS category_id,
        blog_category.name AS category_name,
        user.id AS user_id,
        user.account AS user_account,
        user.path AS user_path,
        user.profile AS user_profile,
		(SELECT COUNT(*) > 0 FROM blog_like where blog_like.blog_id = blog.id and blog_like.user_id = #{auth}) AS liked
      FROM blog
      JOIN user ON user.id = blog.user_id
      JOIN blog_category ON blog_category.id = blog.category_id
    </sql>

    <sql id="listBlog">
      SELECT
        blog.id,
        blog.create_date,
        blog.title,
        blog.n_view
      FROM blog
    </sql>

    <sql id="minimalBlog">
      SELECT
        blog.id,
        blog.`top`,
        blog.`type`,
        blog.create_date,
        blog.title,
        blog.summary,
        blog.n_like,
        blog.n_view,
        blog.n_reply,
        user.id AS user_id,
        user.account AS user_account,
        user.path AS user_path,
        user.profile AS user_profile
      FROM blog
      JOIN user ON user.id = blog.user_id
      JOIN blog_category ON blog_category.id = blog.category_id
    </sql>

    <sql id="comment">
      SELECT
        blog_comment.id,
        blog_comment.blog_id,
        blog_comment.create_date,
        blog_comment.content,
        blog_comment.n_like,
        blog_comment.n_reply,
        user.id AS user_id,
        user.account AS user_account,
        user.path AS user_path,
        user.profile AS user_profile,
	    (SELECT COUNT(*) > 0 FROM blog_comment_like where blog_comment_like.comment_id = blog_comment.id and blog_comment_like.user_id = #{auth}) AS liked
      FROM blog_comment
      JOIN user ON user.id = blog.user_id
    </sql>

    <sql id="category">
      SELECT
        id,
        name,
        n_blog
      FROM blog_category
    </sql>

    <sql id="reply">
      SELECT
        blog_reply.id,
        blog_reply.blog_id,
        blog_reply.comment_id,
        blog_reply.create_date,
        blog_reply.content
        user.id AS user_id,
        user.account AS user_account,
        user.path AS user_path,
        user.profile AS user_profile
      FROM blog_reply
      JOIN user ON user.id = blog_reply.user_id
    </sql>

    <sql id="monthData">
        SELECT
          `date` AS `month`,
          n_blog
        FROM blog_month
    </sql>

    <sql id="typeData">
        SELECT
            `type`,
            n_blog
        FROM blog_type
    </sql>

    <sql id="blogStat">
        SELECT
          user_id,
          n_view,
          n_like,
          n_blog,
          title,
          description
        FROM blog_stat
    </sql>

    <resultMap id="blogMap" type="Blog">
        <id property="id" column="id" />
        <result property="create" column="create_date"/>
        <result property="update" column="update_date"/>
        <result property="top" column="top"/>
        <result property="title" column="title"/>
        <result property="type" column="type" typeHandler="org.mu.community.common.dbutil.BlogTypeHandler"/>
        <result property="summary" column="summary"/>
        <result property="content" column="content"/>
        <result property="nLike" column="n_like"/>
        <result property="nView" column="n_view"/>
        <result property="nReply" column="n_reply"/>
        <association property="category" javaType="BlogCategory">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="account" column="user_account"/>
            <result property="path" column="user_path"/>
            <result property="profile" column="user_profile"/>
        </association>
    </resultMap>

    <resultMap id="commentMap" type="BlogComment">
        <id property="id" column="id" />
        <result property="create" column="create_date"/>
        <result property="update" column="update_date"/>
        <result property="content" column="content"/>
        <result property="nLike" column="n_like"/>
        <result property="nReply" column="n_reply"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="account" column="user_account"/>
            <result property="path" column="user_path"/>
            <result property="profile" column="user_profile"/>
        </association>
    </resultMap>

    <resultMap id="categoryMap" type="BlogCategory">
        <id property="id" column="id" />
        <result property="name" column="name"/>
        <result property="nBlog" column="n_blog"/>
    </resultMap>

    <resultMap id="replyMap" type="BlogReply">
        <id property="id" column="id" />
        <result property="comment" column="comment_id"/>
        <result property="create" column="create_date"/>
        <result property="content" column="content"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="account" column="user_account"/>
            <result property="path" column="user_path"/>
            <result property="profile" column="user_profile"/>
        </association>
    </resultMap>

    <resultMap id="monthDataMap" type="BlogData">
        <result property="month" column="month"/>
        <result property="nBlog" column="n_blog"/>
    </resultMap>

    <resultMap id="typeDataMap" type="BlogData">
        <result property="type" column="type" typeHandler="org.mu.community.common.dbutil.BlogTypeHandler"/>
        <result property="nBlog" column="n_blog"/>
    </resultMap>

    <resultMap id="blogStatMap" type="BlogStat">
        <result property="user" column="user_id"/>
        <result property="nBlog" column="n_blog"/>
        <result property="nView" column="n_view"/>
        <result property="nLike" column="n_like"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
    </resultMap>

    <select id="getCategories" resultMap="categoryMap">
        <include refid="category"/>
        WHERE blog_category.user_id = #{user}
    </select>

    <select id="countBlogByMonth" resultType="int">
        SELECT COUNT(*) FROM blog WHERE blog.user_id = #{user} AND <![CDATA[ blog.create_date >= #{from} AND blog.create_date < #{to} ]]>
    </select>

    <select id="getBlogsByUser" resultMap="blogMap">
        <if test="listMode"><include refid="listBlog"/></if>
        <if test="!listMode"><include refid="minimalBlog"/></if>
        WHERE blog.user_id = #{user}
        ORDER BY blog.create_date
        LIMIT #{offset}, #{size}
    </select>

    <select id="getBlogByCategory" resultMap="blogMap">
        <if test="listMode"><include refid="listBlog"/></if>
        <if test="!listMode"><include refid="minimalBlog"/></if>
        WHERE blog.user_id = #{user} AND blog.category_id = #{category}
        ORDER BY blog.create_date
        LIMIT #{offset}, #{size}
    </select>

    <select id="getBlogByMonth" resultMap="blogMap">
        <if test="listMode"><include refid="listBlog"/></if>
        <if test="!listMode"><include refid="minimalBlog"/></if>
        WHERE blog.user_id = #{user} AND <![CDATA[ blog.create_date >= #{from} AND blog.create_date < #{to} ]]>
        ORDER BY blog.create_date
        LIMIT #{offset}, #{size}
    </select>

    <select id="getBlog" resultMap="blogMap">
        <include refid="blog"/>
        WHERE blog.id = #{blog} AND blog.user_id = #{user}
    </select>

    <select id="getBlogComments" resultMap="commentMap">
        <include refid="comment"/>
        WHERE blog_comment.blog_id = #{blog}
        ORDER BY blog_comment.create_date
        LIMIT #{offset}, #{size}
    </select>

    <select id="getCommentReplies" resultMap="replyMap">
        <include refid="reply"/>
        WHERE blog_reply.comment_id = #{comment}
        ORDER BY blog_reply.create_date
        LIMIT #{offset}, #{size}
    </select>

    <select id="getMonthData" resultMap="monthDataMap">
        <include refid="monthData"/>
        WHERE user_id = #{user}
        ORDER BY `date` DESC
        LIMIT #{offset}, #{size}
    </select>

    <select id="getTypeData" resultMap="typeDataMap">
        <include refid="typeData"/>
        WHERE user_id = #{user}
        ORDER BY `type` ASC
    </select>

    <select id="getBlogStat" resultMap="blogStatMap">
        <include refid="blogStat"/>
        WHERE user_id = #{user}
    </select>

    <select id="getBlogCategory" resultMap="categoryMap">
        <include refid="category"/>
        WHERE id = #{category}
    </select>

</mapper>